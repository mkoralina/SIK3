- trzeba kopiować fragmenty pamieci,a  nie przypisywać do wskaźnikow, bo wtedy zmieniają sie wartosci wskaznika, wraca nie to co trzeba

- przesylac skopiowana tablice, a nie faktycznie buf_FIFO, bo co jak ktoś zmieni w tym samym czasie?

- orzeysłąc do 178*interval - tyle kopiować

 - w mikserze zrobic te petle, ktora chcialas dopisujaca zera

- potem petla dodajaca

- ustawiac ile skosumowano, czyli tak naprawde min(176*, strlen)

- to kasowac w oryginalnym buf_FIFO

- circular buffer dla buf_FIFO -> niby ok, ale trzeba dzielic wtedy dane na dwie partie, jeśli przechodzą przez koniec bufora

- i dla server_FIFO też moze byc tak naprawde.. (chociaż tutaj moze byc lepiej to kopiowanie, bo wtedy łatwiej keep track obecnych datagramow (bo to po pozycjach bedzie widac fajnei, gdzie co jest, a tak to trzeba bedzie .. chociaz też beda te stale, tylko modulo brac wtedy ..)

- dla każego kleinta liczymy datagramy ?
-? nie, z sensem: klient sie dołącza, to słucha od momentu, w którym przyszedł -> tylko jak mu pierwszy datagram przysyłamy, to trzeba spisać sobie ten numer jako 
   baze


- free wszytskie malloci!

- podmienić sleepy na własciwe

MIN, MAX w raportach!

zwalnianie pamięci po wątkach


retransmisja serwer -> kleint !!!!


mikser wyciąga: min(176B*TX_INTERVAL, rozmiar kolejki)




Source and destination overlap in memcpy(0x61c6040, 0x61c6040, 10560)
==17014==    at 0x4C2E403: memcpy@@GLIBC_2.14 (mc_replace_strmem.c:882)
==17014==    by 0x40408F: mix_and_send (in /home/monika/SIK/zad3/server)
==17014==    by 0x404754: main (in /home/monika/SIK/zad3/server)

faktycznie to moze na siebie zachodzić!!!! ale to jakiś poważny błąd?

KLEINT: nie moze sie polaczyc drugi raz z tym samym socketem na udp chyba :/
